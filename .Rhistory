par(mfrow = c(3,1))
plot(log(oj$minuteprice) ,log(oj$minutevol))
plot(log(oj$tropicprice), log(oj$minutevol))
plot(oj$dmnckprice, log(oj$minutevol))
par(mfrow = c(2,2))
plot(log(oj$minuteprice) ,log(oj$minutevol))
plot(log(oj$tropicprice), log(oj$minutevol))
plot(oj$dmnckprice, log(oj$minutevol))
help(boxplot)
boxplot(log(oj$minutevol) ~ oj$minutead, main = "Minute Ad effect on Minute Sales"
names = c("Without Minute Ad", "With Minute Ad"))
boxplot(log(oj$minutevol) ~ oj$minutead, main = "Minute Ad effect on Minute Sales",
names = c("Without Minute Ad", "With Minute Ad"))
boxplot(log(oj$minutevol) ~ oj$minutead, main = "Minute Ad effect on Minute Sales",
names = c("Without Ad", "With Minute Ad"))
plot(log(oj$minuteprice) ,log(oj$minutevol), main = "Minute Sales vs Price")
plot(log(oj$tropicprice), log(oj$minutevol), main = "Minute Sales vs Tropic Price")
plot(log(oj$dmnckprice), log(oj$minutevol), main = "Minute Sale vs Dominick Price")
plot(log(oj$minuteprice) ,log(oj$minutevol), main = "Minute Sales vs Price")
plot(log(oj$tropicprice), log(oj$minutevol), main = "Minute Sales vs Tropic Price")
plot(log(oj$dmnckprice), log(oj$minutevol), main = "Minute Sale vs Dominick Price")
boxplot(log(oj$minutevol) ~ oj$minutead, main = "Minute Ad effect on Minute Sales",
names = c("Without", "With"))
boxplot(log(oj$minutevol) ~ oj$tropicad, main = "Tropic Ad effect on Minute Sale",
names = c("Without", "With"))
boxplot(log(oj$minutevol) ~ oj$dmnckad, main = "Dominick Ad effect on Minute Sale",
names = c("Without", "With"))
mdl.one <- lm(log(oj$minutevol ~ log(oj$minuteprice))
w
summary(mdl.one <- lm(log(oj$minutevol) ~ log(oj$minuteprice)))
cor(oj)
cor(oj) > 0.5
cor(oj) > 0.6
cor(oj) > 0.5
cor(oj$dmnckprice * oj$tropicprice, oj$minuteprice)
summary(mdl.one <- lm(log(oj$minutevol) ~ oj$minutead)
summary(mdl.one <- lm(log(oj$minutevol) ~ oj$minutead))
summary(mdl.one <- lm(log(oj$minutevol) ~ oj$minutead))
cor(oj) > 0.5
names(oj)
oj[1:4]
summary(oj[1:4])
cor(oj[1:4] ) > 0.5
cor(oj$tropicprice, oj$minuteprice)
cor(oj$dmnckprice * oj$tropicprice, oj$minuteprice)
cor(oj[1:4] )
price_effect = oj$tropicprice * oj$minuteprice * oj$dmnckprice
summary(mdl.two <- lm(log(oj$minutevol) ~ oj$minutead + price_effect))
summary(mdl.one <- lm(log(oj$minutevol) ~ oj$minutead))
summary(mdl.two <- lm(log(oj$minutevol) ~ oj$minutead + price_effect))
summary(mdl.one <- lm(log(oj$minutevol) ~ log(oj$minuteprice)))
ojnull <- lm(log(oj$minutevol) ~ 1)
fwdoj <- step(null, scope= ~ ., direction="forward", k=log(1000))
summary(fwdoj)
ojnull <- lm(log(oj$minutevol) ~ 1, data = oj)
fwdoj <- step(null, scope= ~ ., direction="forward", k=log(1000))
summary(fwdoj)
ojnull <- lm(log(oj$minutevol) ~ 1, data = oj)
ojnull <- lm(log(oj$minutevol) ~ 1, data = oj)
ojfull <- lm(log(oj$minutevol) ~ ., data = oj)
fwdoj <- step(null, scope = ojfull, direction="forward", k=log(1000))
fwdoj <- step(null, scope = ojfull, direction="forward")
fwdoj <- step(null, scope = formula(ojfull), direction="forward", k=log(1000))
summary(fwdoj)
ojnull <- lm(log(oj$minutevol) ~ 1, data = oj)
ojfull <- lm(log(oj$minutevol) ~ ., data = oj)
fwdoj <- step(null, scope = formula(ojfull), direction="forward", k=log(1000))
oj <- read.csv("OJ.csv")
ojnull <- lm(log(oj$minutevol) ~ 1, data = oj)
ojfull <- lm(log(oj$minutevol) ~ ., data = oj)
fwdoj <- step(null, scope = formula(ojfull), direction="forward", k=log(1000))
n <- nrow(YX)
price_effect <- oj$tropicprice * oj$minuteprice * oj$dmnckprice
summary(mdl.two <- lm(log(oj$minutevol) ~ oj$minutead + price_effect))
cor(log(oj$dmnckprice) * log(oj$tropicprice), log(oj$minuteprice))
price_effect <- log(oj$tropicprice) * log(oj$minuteprice) * log(oj$dmnckprice)
summary(mdl.two <- lm(log(oj$minutevol) ~ oj$minutead + price_effect))
summary(mdl.two <- lm(log(oj$minutevol) ~ oj$minutead + log(oj$minuteprice)))
price_effect <- log(oj$tropicprice) * log(oj$minuteprice)
summary(mdl.two <- lm(log(oj$minutevol) ~ oj$minutead + log(oj$minuteprice) +
price_effect))
price_effect <- log(oj$tropicprice) * log(oj$minuteprice) * log(oj$dmnckprice)
summary(mdl.two <- lm(log(oj$minutevol) ~ oj$minutead + log(oj$minuteprice) +
price_effect))
price_effect <- log(oj$tropicprice) * log(oj$minuteprice)
summary(mdl.two <- lm(log(oj$minutevol) ~ oj$minutead + log(oj$minuteprice) +
price_effect))
price_effect <- log(oj$tropicprice) * log(oj$minuteprice) * log(oj$dmnckprice)
price_effect <- log(oj$tropicprice) * log(oj$minuteprice) * log(oj$dmnckprice)
summary(mdl.two <- lm(log(oj$minutevol) ~ oj$minutead + price_effect))
summary(mdl.two <- lm(log(oj$minutevol) ~ oj$minutead + log(oj$minuteprice) +
price_effect))
summary(mdl.three <- lm(log(oj$minutevol) ~ oj$minutead + log(oj$minuteprice) +
price_effect))
summary(mdl.four <- lm(log(oj$minutevol) ~ oj$minutead + log(oj$minuteprice) +
price_effect + oj$dmnckad + oj$tropicad))
summary(mdl.four <- lm(log(oj$minutevol) ~ oj$minutead + log(oj$minuteprice) +
price_effect + oj$dmnckad * oj$tropicad))
summary(mdl.four <- lm(log(oj$minutevol) ~ oj$minutead + log(oj$minuteprice) +
price_effect + oj$dmnckad * oj$tropicad - oj$dmnckad
- oj$tropicad))
summary(mdl.four <- lm(log(oj$minutevol) ~ oj$minutead + log(oj$minuteprice) +
price_effect + oj$dmnckad * oj$tropicad))
summary(mdl.three <- lm(log(oj$minutevol) ~ oj$minutead + log(oj$minuteprice) +
price_effect))
ad_effect <- oj$dmnckad * oj$tropicad * oj$minutead
summary(mdl.four <- lm(log(oj$minutevol) ~ oj$minutead + log(oj$minuteprice) +
price_effect + ad_effect))
summary(mdl.four <- lm(log(oj$minutevol) ~ oj$minutead + log(oj$minuteprice) +
price_effect + oj$dmnckad))
ad_effect <- oj$dmnckad * oj$tropicad
price_effect + ad_effect))
summary(mdl.four <- lm(log(oj$minutevol) ~ oj$minutead + log(oj$minuteprice) +
price_effect + ad_effect))
price_effect +oj$tropicad))
summary(mdl.four <- lm(log(oj$minutevol) ~ oj$minutead + log(oj$minuteprice) +
price_effect +oj$tropicad))
summary(mdl.four <- lm(log(oj$minutevol) ~ oj$minutead + log(oj$minuteprice) +
price_effect +oj$dmnckad * oj$tropicad * oj$minutead))
summary(mdl.four <- lm(log(oj$minutevol) ~ oj$minutead + log(oj$minuteprice) +
price_effect + oj$dmnckad + oj$tropicad ))
fert <- read.csv("Fertility.csv")
summary(fert)
summary(labor.kids <- lm(fert$weeksm1 ~ fert$morekids) )
summary(fert)
summary(labor.age <- lm(fert$weeksm1 ~ fert$agem1) )
summary(labor.kids <- lm(fert$weeksm1 ~ fert$morekids) )
summary(labor.age <- lm(fert$weeksm1 ~ fert$agem1) )
summary(fert)
summary(labor.same <- lm(fert$morekids ~ fert$samesex) )
summary(labor.same <- glm(fert$morekids ~ fert$samesex) )
install.packages("sem")
require(sem)
summary(tsls(fert$weeksm1 ~ fert$morekids, ~fert$samesex))
bike <- read.csv("BikeSharing.csv")
summary(bike)
## slide 5
crime <- read.csv("CommunityCrime.csv")
crime$logCR <- log(crime$ViolentCR)
## you need to get rid of the "label" column, and ViolentCR
print (XY <- crime[,-(1:2)] )
summary(XY)
index <- sample(1:nrow(crime),1000)
training <- XY[index,]
validation <- XY[-index,]
## slide 6
## define the scope from small model to big
null <- lm(logCR ~ 1, data=training)
summary(null)
## build a regression model with the BIC
fwdBIC <- step(null, scope=formula(full), direction="forward", k=log(1000))
## slide 7
## again with the BIC, but searching all variables AND interactions
fwdBICinteract <- step(fwdBIC, scope= ~ . + .^2, direction="forward", k=log(1000))
## then with the AIC (just for curiosity, you don't need to do this one on your assignment)
fwdAIC <- step(null, scope=formula(full), direction="forward")
bics <- cbind(null = extractAIC(null, k=log(1000)),
fwdBIC = extractAIC(fwdBIC, k=log(1000)),
fwdBICinteract = extractAIC(fwdBICinteract, k=log(1000)),
fwdAIC  = extractAIC(fwdAIC, k=log(1000)),
full = extractAIC(full, k=log(1000)))
summary(bics)
bics
ebic <- exp(-.5*(bics[2,]-min(bics[2,])))
round(probs <- ebic/sum(ebic),4)
help(cbind)
summary(null)
hepl(extractAIC)
help(extractAIC)
length(log(oj$minutevol))
oj_sales <- oj$minutevol
oj_sales <- log(oj$minutevol)
oj_index <- sample(1:nrow(oj), 1000)
names(oj)
oj_new <- oj[,-1]
oj_new$logsales <- oj_sales
training <- oj_new[oj_index]
oj_index <- sample(1:nrow(oj), 1000)
training <- oj_new[oj_index]
training <- oj_new[oj_index,]
validation <- oj_new[oj_index,]
null_oj <- lm(oj_sales ~ 1, data=training)
summary(null_oj)
oj_fwdBIC <- step(null_oj, scope=formula(full), direction="forward", k=log(1000))
null_oj <- lm(oj_sales ~ 1, data=training)
summary(null_oj)
training <- oj_new[oj_index,]
validation <- oj_new[oj_index,]
null_oj <- lm(oj_sales ~ 1, data=training)
summary(null_oj)
training <- oj_new[oj_index,]
validation <- oj_new[oj_index,]
null_oj <- lm(oj_sales ~ 1, data=training)
summary(null_oj)
oj_fwdBIC <- step(null_oj, scope=formula(full), direction="forward", k=log(1000))
oj_fwdBIC <- step(null_oj, scope=~., direction="forward", k=log(1000))
help(step)
summary(training)
summary(full)
full_oj <- lm(oj_sales ~ ., data = training)
oj_new$logsales = oj_sales
oj_new <- oj[,-1]
oj_new$logsales = oj_sales
oj_new$logsales = oj_sales
oj_index <- sample(1:nrow(oj), 1000)
training <- oj_new[oj_index,]
validation <- oj_new[oj_index,]
null_oj <- lm(oj_sales ~ 1, data=training)
summary(null_oj)
full_oj <- lm(oj_sales ~ ., data = training)
nrow(training)
length(oj$tropicprice)
full_oj <- lm(oj_new$logsales ~ ., data = training)
length(oj_new$logsales)
oj_new$logsales <- oj_sales
oj_index <- sample(1:nrow(oj), 1000)
training <- oj_new[oj_index,]
validation <- oj_new[oj_index,]
validation <- oj_new[-oj_index,]
summary(training)
length(oj_new$gsales)
length(oj_new$logsales)
oj_new$logsales <- oj_new$logsales[oj_index]
oj_index
oj$log_sales <- log(oj$minutevol)
oj_new <- oj[,-1]
summary(oj_new)
oj_index <- sample(1:nrow(oj), 1000)
training <- oj_new[oj_index,]
validation <- oj_new[-oj_index,]
null_oj <- lm(oj_sales ~ 1, data=training)
full_oj <- lm(oj_new$logsales ~ ., data = training)
full_oj <- lm(oj_new$log_sales ~ ., data = training)
full_oj <- lm(traning$log_sales ~ ., data = training)
full_oj <- lm(training$log_sales ~ ., data = training)
oj_fwdBIC <- step(null_oj, scope = formula(full_oj) , direction="forward", k=log(1000))
null_oj <- lm(training$oj_sales ~ 1, data=training)
full_oj <- lm(training$log_sales ~ ., data = training)
null_oj <- lm(training$log_sales ~ 1, data=training)
oj_fwdBIC <- step(null_oj, scope = formula(full_oj) , direction="forward", k=log(1000))
fwdBICinteract <- step(fwdBIC, scope= ~ . + .^2, direction="forward", k=log(1000))
fwdBICinteract <- step(oj_fwdBIC, scope= ~ . + .^2, direction="forward", k=log(1000))
summary(oj_fwdBIC)
summary(fwdBICinteract)
summary(mdl.one <- lm(training$log_sales ~ training$minutead))
summary(mdl.one <- lm(training$log_sales ~ log(training$minuteprice)))
summary(mdl.one <- lm(training$log_sales ~ training$minutead))
#mdl 2
price_effect <- log(training$tropicprice) * log(training$minuteprice) * log(training$dmnckprice)
summary(mdl.two <- lm(training$log_sales ~ training$minutead + price_effect))
#mdl 3
summary(mdl.three <- lm(training$log_sales ~ training$minutead + log(training$minuteprice) +
price_effect))
#mdl 4
ad_effect <- training$dmnckad * training$tropicad
summary(mdl.four <- lm(training$log_sales ~ training$minutead + log(training$minuteprice) +
price_effect + training$dmnckad + training$tropicad ))
nrow(validation)
length(validation$log_sales)
length(validation$log_sales)
errorOne <- predict(mdl.one, newdata = validation) - validation$log_sales
summary(mdl.one)
errorOne <- predict(mdl.one, newdata = validation)
errorOne <- predict(extractAIC(mdl.one, k = log(1000) ), newdata = validation)
errorOne <- predict(mdl.one = extractAIC(mdl.one, k = log(1000) ), newdata = validation)
summary(mdl.one <- lm(training$log_sales ~ training$minutead, data = training))
summary(mdl.two <- lm(training$log_sales ~ training$minutead + price_effect, data = training))
errorOne <- predict(mdl.one = extractAIC(mdl.one, k = log(1000) ), newdata = validation)
errorOne <- predict(mdl.one, newdata = validation)
help(predict)
errorOne <- predict(mdl.one, newdata = validation)
errorOne <- predict(mdl.one, newdata = validation)
errorOne
length(errorOne)
bics
summary(full)
null = extractAIC(null, k = log(1000))
null
summary(null)
mdl.one = extractAIC(mdl.one, k = log(1000))
mdl.one
summary(mdl.one)
predict(mdl.one, data = validation)
predict(mdl.two, data = validation)
fuckthis <- predict(mdl.two, data = validation)
length(fuckthis)
fuckthis <- predict(mdl.two, newdata = validation)
length(fuckthis)
errorBIC <- predict(fwdBIC, newdata=validation)-validation$logCR
##### Crime Data #######
########################
crime <- read.csv("CommunityCrime.csv")
crime$logCR <- log(crime$ViolentCR)
print (XY <- crime[,-(1:2)] )
## create training and validation sets
index <- sample(1:nrow(crime),1000)
## slide 6
training <- XY[index,]
validation <- XY[-index,]
## define the scope from small model to big
null <- lm(logCR ~ 1, data=training)
summary(null)
## build a regression model with the BIC
## you need to get rid of the "label" column, and ViolentCR
fwdBIC <- step(null, scope=formula(full), direction="forward", k=log(1000))
## slide 7
## again with the BIC, but searching all variables AND interactions
## slide 5
errorNull <- predict(null, newdata=validation)-validation$logCR
errorBIC <- predict(fwdBIC, newdata=validation)-validation$logCR
errorBICinteract <- predict(fwdBICinteract, newdata=validation)-validation$logCR
errorAIC <- predict(fwdAIC, newdata=validation)-validation$logCR
errorFull <- predict(full, newdata=validation)-validation$logCR
errorOne <- predict(oj_fwdBIC, newdata = validation)
fwdBICinteract <- step(oj_fwdBIC, scope= ~ . + .^2, direction="forward", k=log(1000))
null_oj <- lm(training$log_sales ~ 1, data=training)
full_oj <- lm(training$log_sales ~ ., data = training)
oj$log_sales <- log(oj$minutevol)
oj_new <- oj[,-1]
summary(oj_new)
oj_index <- sample(1:nrow(oj), 1000)
oj_training <- oj_new[oj_index,]
oj_validation <- oj_new[-oj_index,]
null_oj <- lm(training$log_sales ~ 1, data=oj_training)
full_oj <- lm(training$log_sales ~ ., data = oj_training)
null_oj <- lm(oj_training$log_sales ~ 1, data=oj_training)
full_oj <- lm(oj_training$log_sales ~ ., data = oj_training)
oj_fwdBIC <- step(null_oj, scope = formula(full_oj) , direction="forward", k=log(1000))
oj_fwdBICinteract <- step(oj_fwdBIC, scope= ~ . + .^2, direction="forward", k=log(1000))
errorOne <- predict(oj_fwdBIC, newdata = validation)
errorTwo <- predict(oj_fwdBIC, newdata = validation)
errorOne <- predict(oj_fwdBIC, newdata = oj_validation)
errorTwo <- predict(oj_fwdBIC, newdata = oj_validation)
mseOne <- mean(errorOne^2)
mseTwo <- mean(errorOne^2)
mseOne
mseTwo
mseTwo <- mean(errorTwo^2)
mseOne
mseTwo
errorTwo <- predict(oj_fwdBICInteract, newdata = oj_validation)
errorTwo <- predict(oj_fwdBICinteract, newdata = oj_validation)
mseOne <- mean(errorOne^2)
mseTwo <- mean(errorTwo^2)
mseOne
mseTwo
summary(tsls(fert$weeksm1 ~ fert$morekids + agem1 + black + hispan + othrace,
~fert$samesex + agem1 + black + hispan + othrace))
agem1 <- fert$agem1
black <- fert$black
hispan <- fert$hispan
othrace <- fert$othrace
summary(tsls(fert$weeksm1 ~ fert$morekids + agem1 + black + hispan + othrace,
~fert$samesex + agem1 + black + hispan + othrace))
summary(tsls(fert$weeksm1 ~ fert$morekids,
~fert$samesex + agem1 + black + hispan + othrace))
market <- read.csv("market.csv")
summary(market)
market <- read.csv("markets.csv")
market <- read.csv("markets.csv")
market <- read.csv("market.csv")
summary(market)
summary(market)
help(list)
1 + 1
2 + 2
1
sbux <- market$SBUX
summary(sbux)
length(sbux)
1 + 1
length(sbux)
market <- read.csv("market.csv")
summary(market)
#google
sbux <- market$SBUX
length(sbux)
summary(sbux)
s_one <- lm(sbux ~ market$MKTminusRF)
summary(s_one)
s_three <- lm(sbux ~ market$MKTminusRF + market$SMB + market$HML + market$CMA)
summary(s_three)
s_one <- lm(sbux - market$RF ~ market$MKTminusRF)
summary(s_one)
s_three <- lm(sbux - market$RF ~ market$MKTminusRF + market$SMB +
market$HML + market$CMA)
summary(s_three)
s_five <- lm(sbux - market$RF ~ market$MKTminusRF + market$SMB +
market$HML + market$CMA + market$MOM)
summary(s_five)
help(list)
amzn <- market$AMZN
a_one <- lm(amzn - market$RF ~ market$MKTminusRF)
a_three <- lm(amzn - market$RF ~ market$MKTminusRF + market$SMB +
market$HML + market$CMA)
a_five <- lm(amzn - market$RF ~ market$MKTminusRF + market$SMB +
market$HML + market$CMA + market$MOM)
census <- read.csv("census2000.csv")
n = nrow(sbux)
n
n = nrow(market)
n
log(n)[2]
census <- read.csv("census2000.csv")
YX <- data.frame(log.WR = log(census$income/census$hours))
YX$age <- census$age
YX$age2 <- census$age^2
YX$sex <- census$sex
YX$race <- relevel(census$race, "White")
YX$marital <- relevel(census$marital, "Married")
YX$hs <- census$edu=="3.hsgrad"
YX$assoc <- census$edu=="4.assoc"
YX$coll <- census$edu=="5.bachs"
YX$grad <- as.numeric(census$edu)>6
YX <- YX[(census$hours > 500)&(census$income > 5000)&(census$age < 60), ]
summary(reg1 <- lm(log.WR ~ age*sex + age2*sex + ., data=YX) )
summary(reg2 <- lm(log.WR ~ age*sex + age2*sex + marital +
(hs+assoc+coll+grad)*age + race*age , data=YX) )
anova(reg1, reg2)
summary(reg3 <- lm(log.WR ~ race*age*sex + age2*sex + marital +
(hs+assoc+coll+grad)*age, data=YX) )
anova(reg2, reg3)
summary(reg4 <- lm(log.WR ~ race*age*sex - race + age2*sex +
marital + (hs+assoc+coll+grad)*age, data=YX))
anova(reg3, reg4)
n <- nrow(YX)
print(AIC <- c(reg1=extractAIC(reg1)[2],
reg2=extractAIC(reg2)[2],
reg3=extractAIC(reg3)[2],
reg4=extractAIC(reg4)[2]))
reg
reg1
print(BIC <- c(reg1=extractAIC(reg1, k=log(n))[2],
reg2=extractAIC(reg2, k=log(n))[2],
reg3=extractAIC(reg3, k=log(n))[2],
reg4=extractAIC(reg4, k=log(n))[2]))
print(BIC <- c(reg1=extractAIC(reg1, k=log(n)),
reg2=extractAIC(reg2, k=log(n))[2],
reg3=extractAIC(reg3, k=log(n))[2],
reg4=extractAIC(reg4, k=log(n))[2]))
print(BIC <- c(reg1=extractAIC(reg1, k=log(n))[2],
reg2=extractAIC(reg2, k=log(n))[2],
reg3=extractAIC(reg3, k=log(n))[2],
reg4=extractAIC(reg4, k=log(n))[2]))
print(BIC <- c(reg1=extractAIC(reg1, k=log(n))[2,],
reg2=extractAIC(reg2, k=log(n))[2],
reg3=extractAIC(reg3, k=log(n))[2],
reg4=extractAIC(reg4, k=log(n))[2]))
extractAIC(reg1, k=log(n))
help(extractAIC)
s_models <- list(s_one = s_one, s_three = s_three, s_five = s_five)
n = nrow(market)
s_bic <- sapply(models, extractAIC, k = log(nrow(sbux)))[2,]
s_bic <- sapply(s_models, extractAIC, k = log(nrow(sbux)))[2,]
s_bic <- sapply(s_models, extractAIC, k = loG(n))[2,]
s_bic <- sapply(s_models, extractAIC, k = log(n))[2,]
s_ebic <- exp(-.5 * (s_bic - min(s_bic) ) )
round(ebic / sum(ebic), 4)
round(s_ebic / sum(s_ebic), 4)
anova(s_one, s_three)
a_models <- list(a_one = a_one, a_three = a_three, a_five = a_five)
n = nrow(market)
a_ebic <- exp(-.5 * (a_bic - min(a_bic) ) )
round(a_ebic / sum(a_ebic), 4)
a_bic <- sapply(a_models, extractAIC, k = log(n))[2,]
a_ebic <- exp(-.5 * (a_bic - min(a_bic) ) )
round(a_ebic / sum(a_ebic), 4)
s_aic <- sapply(s_models, extractAIC)[2,]
s_eaic <- exp(-.5 * (s_aic - min(s_aic) ) )
round(s_eaic / sum(s_eaic), 4)
s_aic
s_bic
s_aic <- sapply(s_models, extractAIC)[2,]
s_eaic <- exp(-.5 * (s_aic - min(s_aic) ) )
round(s_eaic / sum(s_eaic), 4)
a_aic <- sapply(a_models, extractAIC)[2,]
a_eaic <- exp(-.5 * (a_aic - min(a_aic) ) )
round(a_eaic / sum(a_eaic), 4)
seat <- read.csv("Seatbelts.csv")
seat <- read.csv("seatbelt.csv")
summary(seat)
plot(seat$year)
nrow(seat)
seat <- read.csv("seatbelt.csv")
nrow(seat)
summary(seat)
plot(seat$year, seat$drivers)
plot(seat$drivers)
seat$seq <- seq(1:nrow(seat))
plot(seat$seq, seat$drivers)
print(acf(seat$drivers))
print(acf(log(seat$drivers) ) )
boxpot(seat$drivers ~ seat$law)
boxplot(seat$drivers ~ seat$law)
par(mfrow = c(2, 2))
plot(seat$drivers)
boxplot(seat$drivers ~ seat$law)
plot(seat$petrol, seat$drivers)
acf(seat$drivers)
lm(seat$drivers ~ seat$law)
seat_one <- lm(seat$drivers ~ seat$law)
summary(seat_one)
seat_one <- lm( log(seat$drivers) ~ seat$law)
summary(seat_one)
plot(seat_one$resid)
seat_one <- lm( seat$drivers ~ seat$law)
plot(seat_one$resid)
seat_one <- lm( log(seat$drivers) ~ seat$law)
seat_two <- lm( log(seat$drivers) ~ seat$law + seat$petrol)
summary(seat_one)
summary(seat_two)
acf(seat$drivers)
